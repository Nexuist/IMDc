extends _templates/base.jade

block head
    +css("/assets/styles/search.css")
     //- JS library that converts markdown to HTML
    script(src="https://cdnjs.cloudflare.com/ajax/libs/marked/0.3.6/marked.min.js")
    script(src="/assets/scripts/search.js", defer)
    title IMDc Search

block body
    section#pagination.container.is-fluid.padded
        nav.pagination.is-centered.is-medium(v-if="results > 0", role="pagination", aria-label="pagination")
            a.pagination-previous(v-if="page == 1", disabled) Previous
            a.pagination-previous(v-else, v-on:click="submitQuery(page - 1)") Previous
            ul.pagination-list
                li
                    //- Only show the first 20 pages, because people probably aren't going to search farther than that anyways
                    a.pagination-link(v-for="i in (pages <= 20 ? pages : 20)", :class="{'is-current': i == page}", v-on:click="submitQuery(i)") {{ i }}
            a.pagination-next(v-if="page == pages", disabled) Next
            a.pagination-next(v-else, v-on:click="submitQuery(page + 1)") Next
    section#listings.container.is-fluid.padded
        h1.subtitle #[b {{results}}] {{resultsText}} 
        //- Show this if there are no listings are available
        .has-text-centered(v-if="results < 0")
            h1.title.is-4.is-spaced TMDB's API may be down, or it may not have the movie you searched for. Try refining your search.
            h2.subtitle.is-6 If you're a developer, check the console for any errors that may have occured.
        //- Show this if there are
        .columns.is-multiline(v-else)
            .column.is-one-quarter(v-for="movie in movies")
                a(v-on:click="selectedMovie = movie")
                    .card.movie-card
                        //- Note: Every single property inside movie is optional, so fallbacks are required b/c nothing is guaranteed to be defined
                        .card-image
                            figure.image
                                //- Future improvement: Show a loading image until the poster finishes loading
                                //- Show the poster if it exists, or a fallback cover if it doesn't
                                //- But hide the fallback poster on mobile so pointless content doesn't fill the screen
                                img(:src="getPosterURL(movie)", 
                                    :class="{'is-hidden-mobile': movie.poster_path == null}")
                        .card-content
                            .media
                                .media-content
                                    p.title.is-4 {{ getTitle(movie) }}
                                    p.subtitle.is-6(v-if="movie.vote_average") #[rating-stars(:rating="movie.vote_average")] ({{ movie.vote_average }})
                                    p.subtitle.is-6.has-text-grey(v-else) No ratings available
                            .content
                                .tags(v-if="movie.genre_ids.length > 0")
                                    span.tag(v-for="genre in getGenres(movie)") {{ genre }}
                                div(v-else)
                                    small No genres available
                            small.release-date {{ getReleaseYear(movie) }}
    section#movie-details.modal.is-active(v-if="selectedMovie")
        //- Click outside the modal to hide it
        .modal-background(v-on:click="selectedMovie = null")
        .modal-card
            header.modal-card-head
                p.modal-card-title {{ getTitle(selectedMovie) }}
                button.delete(aria-label="Close", v-on:click="selectedMovie = null")
            section.modal-card-body
                .columns
                    .column.is-one-quarter
                        figure.image(v-if="selectedMovie")
                            img(:src="getPosterURL(selectedMovie)")
                    .column
                        .content
                            h1.title.is-5 Fast Facts
                            mixin stat(key, title)
                                div(v-if="selectedMovie." + key)
                                    - value = `{{selectedMovie.${key}}}`
                                    b= title + " "
                                    span= value 
                            mixin detailed_stat(key, title)
                                div(v-if="selectedMovie." + key) 
                                    - property = key //- Mixin args aren't in block scope, so we save key here
                                    - value = `{{selectedMovie.${key}}}`
                                    b= title + " "
                                    //- Block can be overriden so value is displayed in a custom manner
                                    block
                            +detailed_stat("vote_average", "Vote Average")
                                span  #{value}/10 ({{ selectedMovie.vote_count }} votes total)
                            +stat("release_date", "Release Date")
                            +detailed_stat("runtime", "Runtime")
                                span #{value} minutes
                            +detailed_stat("revenue", "Revenue")
                                //- Vue will pick this up and convert it later
                                - value = `{{ selectedMovie.${property}.format() }}`
                                span $#{value}
                            div(v-if="selectedMovie.production_companies && selectedMovie.production_companies.length > 0")
                                b Production Companies 
                                //- List production companies separated by commas
                                span(v-for="company, index in selectedMovie.production_companies") {{ index != 0 ? "," : null }} {{ company.name }}
                .movie-section(v-if="selectedMovie.tagline")
                    h1.title.is-5 Tagline
                    p {{selectedMovie.tagline}}
                .movie-section(v-if="selectedMovie.overview")
                    h1.title.is-5 Overview
                    p {{selectedMovie.overview}}
                .movie-section(v-if="selectedMovie.reviews && selectedMovie.reviews.total_results > 0")
                    h1.title.is-5 Reviews #[a.pull-right(:href="`https://www.themoviedb.org/movie/${selectedMovie.id}/reviews`", target="_blank") View All]
                    a(v-for="review in selectedMovie.reviews.results", :href="review.url", target="_blank")
                        .card
                            .card-content
                                .content
                                    h1.title.is-5 {{review.author}}
                                    //- We use v-html here so that the results of markdownToHTML are saved directly to DOM
                                    p(v-html="markdownToHTML(truncateReviewText(review.content))")